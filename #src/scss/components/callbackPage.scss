@import "variables";

.callback {
  @include size(100vw, 100vh);
  overflow: hidden;
  position: relative;

  form {
    @include size(100%, 100%);
  }
}

.callback__nextStep {
  position: absolute;
  bottom: 30px;
  right: 30px;

  display: flex;
  align-items: center;
  color: #fff;
  text-transform: uppercase;
  font-size: 24px;
  font-family: Montserrat, sans-serif;
  transition: .3s;
  cursor: pointer;
  padding-right: 50px;

  &:hover {
    color: $green-1;
    text-shadow: 0 0 5px $green_1;

    svg {
      stroke: $green_1;
      filter: drop-shadow( 0 0 5px $green_1);
    }
  }

  svg {
    @include size(20px, 50px);
    stroke: #fff;
    transition: .5s;
    position: absolute;
    bottom: 0;
    right: 0;

    transform: translate(-20px ,11px);

    &:nth-of-type(2) {
      animation: 1s linear 1s infinite alternate callbackArrow2;
    }

    &:nth-of-type(3) {
      animation: 1s linear 1s infinite alternate callbackArrow3;
    }
  }
}

@keyframes callbackArrow2 {
  0% {transform: translateX(-20) translateY(11px) ;}
  100% {transform: translateX(-13px) translateY(11px);}
}

@keyframes callbackArrow3 {
  0% {transform: translateX(-20) translateY(11px);}
  100% {transform: translateX(-6px) translateY(11px);}
}


.callback__numberPage {
  position: absolute;
  bottom: 30px;
  left: 30px;
  width: 45px;

  &:before {
    content: '';
    @include size(1px, 50px);
    position: absolute;
    top: 60%;
    left: 60%;
    transform: translate(-50%, -50%) rotate(45deg);
    background: #fff;
  }

  p {
    &:first-of-type {
      font-size: 50px;
      line-height: 40px;
    }

    &:last-of-type {
      font-size: 25px;
      color: $black_1;
      float: right;
    }
  }
}

.callback__notInput {
  @include adaptiveFormula(font-size, 15, 24);
  color: $green_1;
  opacity: 0;
  visibility: hidden;
}

.callback__box {
  @include size(100%, 100%);
  @include flex(column, flex-start, center, nowrap);
  background: $backgroundSite;
  padding: 200px 10px 10px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  overflow: hidden;
  text-align: center;

  h2 {
    @include adaptiveFormula(font-size, 24, 50);
    @include adaptiveFormula(margin-bottom, 60, 100);
  }

  input {
    @include size(70%, auto);
    @include adaptiveFormula(font-size, 18, 30);
    background: none;
    border: none;
    color: #fff;
    border-bottom: 2px solid $black_1;
    padding: 5px;
    text-align: center;

    &:focus {
      border-color: $green_1;
    }

    &::placeholder {
      color: $black_1;
    }
  }
}

.callback__name {
  z-index: 7;

  .callback__numberPage, .callback__nextStep {
    opacity: 0;
  }

  h2 {
    transform: translateX(-10px);
    opacity: 0;
  }

  input {
    width: 0;
    opacity: 0;
  }
}

.callback__circle {
  @include adaptiveFormula(width, 290, 600);
  height: auto;
  display: flex;
  justify-content: space-between;
  margin-top: -50px;


  input {
    display: none;

    &:checked + label {
      box-shadow: 0 0 8px 2px $green_2 inset;

      svg {
        fill: $green_2;
        transform: scale(.7);
      }
    }
  }

  label {
    @include adaptiveFormula(width, 55, 100);
    @include adaptiveFormula(height, 55, 100);
    @include flex(row, center, center, nowrap);
    border-radius: 50%;
    background: $black_2;
    transition: .5s;
    border: 2px solid $black_2;

    &:hover {
      box-shadow: 0 0 8px 8px $green_1;

      svg {
        fill: $green_1;
      }
    }
  }

  svg {
    height: calc(25px + (50 - 25) * ((100vw - 320px) / (1920 - 320)))!important;
    margin-left: 0!important;
    fill: #fff;
    transition: .5s;
  }
}

.callback__phone {
  z-index: 6;

  input[type="text"] {
    @include adaptiveFormula(margin-top, 25, 50);
    width: 0;
    opacity: 0;
    padding: 0;
  }
}

.callback__backImg {
  width: 370px!important;
  height: 370px!important;
  position: absolute;
  top: 50%;
  left: 70%;
  transform: translateY(-50%);
  z-index: -1;
  opacity: .5;
}

.callback__complete {
  z-index: 5;

  p {
    @include adaptiveFormula(font-size, 15, 30);
  }
}

.callback__completeNumbers {
  color: $black_1;
}
